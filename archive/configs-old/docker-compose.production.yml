version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nusantara-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: nusantara_construction
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d nusantara_construction"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.optimized
    container_name: nusantara-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: yk-postgres-dev
      DB_PORT: 5432
      DB_NAME: nusantara_construction
      DB_USERNAME: admin
      DB_PASSWORD: admin123
      JWT_SECRET: nusantara_jwt_secret_2024_construction_management_system
      PORT: 5000
      CORS_ORIGIN: https://nusantaragroup.co
    # Expose backend to host for Apache proxy
    ports:
      - "127.0.0.1:5000:5000"
    networks:
      - app-net
      - yk-dev-network
    volumes:
      - ./uploads:/app/uploads
      - ./reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.nginx
      args:
        - REACT_APP_API_URL=/api
        - NODE_ENV=production
    container_name: nusantara-frontend-prod
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: /api
      REACT_APP_ENV: production
      GENERATE_SOURCEMAP: false
    ports:
      - "127.0.0.1:8080:80"
    networks:
      - app-net
    depends_on:
      - backend

volumes:
  postgres_data_prod:
    driver: local

networks:
  app-net:
    driver: bridge
  yk-dev-network:
    external: true
    name: app-yk_yk-dev-network
